- Future iterations
  - Move nix shell when installing instead of re-writing
  - Isolate --cleanup with aborted request fails with multiple processes? Isolate --cleanup try sigterm to isolate?
  - Large test cases
  - Endpoint for garbage collection
  - Cache compiled programs using hash
  - Implement bounds on limits
  - Optionally take id for adding runtime and make sure it does not exist
  - Get runtime info endpoint to help in distributed systems consistency
  - CI on packages
    - A repo that includes request templates with CI automated tests run on them to ensure their integrity
      - Users can fork their repository and have their own CI tests
  - Limit overrides
  - Interactive execution
  - Max stdout and stderr size
  - API key?
  - Ensure nix shell does not enter an infinite shell hook loop
  - CI/CD
  - Test update nix concurrency
  - How to handle large request bodies in queue?
    - Limit queue size and return "queue full"
    - Websockets and only accept data from client once a queue spot is ready (notifying the client once one is ready)
    - Distributed systems request handler while limiting the number of concurrent tasks on workers

- TA discussion
  - What is Envicutor?
    - Competitive programming system example
      - User submits code through frontend
      - Frontend sends request to backend
      - Backend needs to execute the untrused user code
        - With the appropriate programming language
        - With the appropriate limits (wall_time, cpu_time, memory, extra_time, max_open_files, max_file_size, max_number_of_processes)
        - With the appropriate metrics reported (memory, exit_code, exit_signal, exit_message, exit_status, stdout, stderr, cpu_time, wall_time)
      - It does that by consulting a code execution system <- This is Envicutor
  - How to build a code execution system?
    - Isolation
      - Definition
        – Communicate via reading and writing to files
        – Communicate via the local network
        – Read sensitive data on the host system
        – Write any residual files on the host system
        – Gain knowledge of any other processes running on the host system
      - Online IDE (first google search for online IDE)
        - No isolation, just runs as a different user than that of the code execution system
        - ps aux
        - killall python3
        - Can read see other people's files
      - Piston
        - Isolation by running each submission under a different user
        - Tries to avoid stuff like killing other submissions processes, viewing their directories and modifying them
        - ps aux
        - can write to shared /tmp
      - Judge0 and Envicutor
        - Isolate with some differences
          - Envicutor has cgroup2
            - Using Isolate without systemd
          - Envicutor has loopback interface
          - Envicutor does not use insecure --share-net option
        - Show how Envicutor uses isolate while running code
    -
